/* tslint:disable */
/* eslint-disable */
/**
 * Open Flashcards API
 * Open Flashcards API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NotFoundErrorResponseDto
 */
export interface NotFoundErrorResponseDto {
    /**
     * HTTP status code
     * @type {number}
     * @memberof NotFoundErrorResponseDto
     */
    statusCode: number;
    /**
     * Error message
     * @type {string}
     * @memberof NotFoundErrorResponseDto
     */
    message: string;
    /**
     * Error type
     * @type {string}
     * @memberof NotFoundErrorResponseDto
     */
    error: string;
}

/**
 * Check if a given object implements the NotFoundErrorResponseDto interface.
 */
export function instanceOfNotFoundErrorResponseDto(value: object): value is NotFoundErrorResponseDto {
    if (!('statusCode' in value) || value['statusCode'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('error' in value) || value['error'] === undefined) return false;
    return true;
}

export function NotFoundErrorResponseDtoFromJSON(json: any): NotFoundErrorResponseDto {
    return NotFoundErrorResponseDtoFromJSONTyped(json, false);
}

export function NotFoundErrorResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NotFoundErrorResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'statusCode': json['statusCode'],
        'message': json['message'],
        'error': json['error'],
    };
}

export function NotFoundErrorResponseDtoToJSON(json: any): NotFoundErrorResponseDto {
    return NotFoundErrorResponseDtoToJSONTyped(json, false);
}

export function NotFoundErrorResponseDtoToJSONTyped(value?: NotFoundErrorResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'statusCode': value['statusCode'],
        'message': value['message'],
        'error': value['error'],
    };
}

