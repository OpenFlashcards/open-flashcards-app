/* tslint:disable */
/* eslint-disable */
/**
 * Open Flashcards API
 * Open Flashcards API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateUserDto
 */
export interface CreateUserDto {
    /**
     * User email address
     * @type {string}
     * @memberof CreateUserDto
     */
    email: string;
    /**
     * User password (required for email authentication)
     * @type {string}
     * @memberof CreateUserDto
     */
    password?: string;
    /**
     * User display name
     * @type {string}
     * @memberof CreateUserDto
     */
    name?: string;
    /**
     * Apple ID for Apple authentication
     * @type {string}
     * @memberof CreateUserDto
     */
    appleId?: string;
    /**
     * Google ID for Google authentication
     * @type {string}
     * @memberof CreateUserDto
     */
    googleId?: string;
    /**
     * Authentication provider
     * @type {string}
     * @memberof CreateUserDto
     */
    provider?: CreateUserDtoProviderEnum;
}


/**
 * @export
 */
export const CreateUserDtoProviderEnum = {
    Email: 'email',
    Apple: 'apple',
    Google: 'google'
} as const;
export type CreateUserDtoProviderEnum = typeof CreateUserDtoProviderEnum[keyof typeof CreateUserDtoProviderEnum];


/**
 * Check if a given object implements the CreateUserDto interface.
 */
export function instanceOfCreateUserDto(value: object): value is CreateUserDto {
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function CreateUserDtoFromJSON(json: any): CreateUserDto {
    return CreateUserDtoFromJSONTyped(json, false);
}

export function CreateUserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateUserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'password': json['password'] == null ? undefined : json['password'],
        'name': json['name'] == null ? undefined : json['name'],
        'appleId': json['appleId'] == null ? undefined : json['appleId'],
        'googleId': json['googleId'] == null ? undefined : json['googleId'],
        'provider': json['provider'] == null ? undefined : json['provider'],
    };
}

export function CreateUserDtoToJSON(json: any): CreateUserDto {
    return CreateUserDtoToJSONTyped(json, false);
}

export function CreateUserDtoToJSONTyped(value?: CreateUserDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'password': value['password'],
        'name': value['name'],
        'appleId': value['appleId'],
        'googleId': value['googleId'],
        'provider': value['provider'],
    };
}

